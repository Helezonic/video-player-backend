name: Deploy Dockerized App to AWS EC2 without registry hub

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker Image
      run: docker build -t backend-clipsave:latest .

    - name: Save Docker Image to tarball
      run: docker save backend-clipsave-image:latest -o backend-clipsave-app.tar

    - name: Transfer Image to EC2 and Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.UBUNTU_SSH_KEY }}
        source: "backend-clipsave-app.tar" # This will SCP the tarball
        target: "/tmp"            # To a temporary location on EC2
        script: |
          # Stop and remove old container
          sudo docker stop backend-clipsave-image || true
          sudo docker rm backend-clipsave-image || true

          # Load & clean up the new image from the tarball
          sudo docker load -i /tmp/backend-clipsave-app.tar
          rm /tmp/backend-clipsave-app.tar

          # Run the new container
          sudo docker run -d -p 80:4000 --restart always backend-clipsave-image:latest
        
          #Or include the above command in myapp.service EXEC:
          #sudo systemctl daemon-reload
          #sudo systemctl restart myapp.service
          #sudo systemctl status myapp.service